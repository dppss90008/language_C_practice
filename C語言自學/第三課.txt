# 資料的儲存與處理
- 資料記憶(記憶體) 與運算 (CPU)
- 運算元operand(資料),運算子operator(+-*/),表示式expression(3+5/2)
- 依次執行一個運算,運算子間有優先順序 先乘除後加減

# 整數與浮點數的算術運算
- a + b ; a - b 順序 1 + 2 - 3 + 5 由左運算到右邊
- * / > + - =====> 1 + 2 * 3 / 4 - 5
- 整數相乘 還是整數; 整數相除是整數 ; 浮點數相除是浮點數
- % 求餘數 只能用在整數 5%2 = 1 不可 5%2.1 ???
- %2 ... 1 奇數 ; %2 ... 0 偶數 

#  賦值運算
- = 賦值運算子 int a = 5 [5這個數值賦予給a這個變數]
- 3 = a ?? 錯誤
- 運算順序 由右到左
- 優先順序低
- int a, c ; double b, d;
- a = b = c = d = 3+7/2. [a int b double c int d double]
- 3 + 3.5 = 6.5 
- d = 6.5
- c = 6
- b = 6.000
- a = 6

# 是非對錯
- 流程控制: 有條件執行程式碼
- 什麼是條件? 今天天氣很好 就出門玩 不好就 在家看書
- 二分型資料 對或錯 是或否 [1個位元]
- 1 表示 真 True 0 代表 假 False
- _Bool C99以後 但很少用

# 關係運算子
- 大於 小於 3 < 5 : True ; 3 > 5 : False
- 大於等於 >= 小於等於 <= 等於等於 == 不等於 !=
- 3 > 2 > 1 => 1 > 1 => False
- 如何表示 a > b > c ?

# 邏輯運算子
- && 而且 3 > 2 && 2 > 1
- || 或 a > 2 || a < -1
- 可以用 and ? #include<iso646.h>
- 關係運算子 優先度 大於 邏輯運算子
- 短路求值short curcuit evaluation
- ! 非 !(3>2) = False 

# 運算子優先順序
1. ! 例外 由右到左 !a > b [!先做 之後 >]

1. * / % 算數運算 由左到右 
2. + - 算數運算 由左到右
3. > < >= <= 關係運算 由左到右
4. == != 關係運算 由左到右   a + b > c - d == a > d [+-先 >後 ==最後]
5. && 
6. ||
7. = 賦值運算 由右到左

